* = 0 ; We just use * to count position in the CHR-rom, begin with zero is easy

; TILE $00
;
; XXXXXXXX
; XooooooX
; XooooooX
; XooooooX
; XooooooX
; XooooooX
; XooooooX
; XXXXXXXX
.byt $FF, $81, $81, $81, $81, $81, $81, $FF
.byt $00, $7E, $7E, $7E, $7E, $7E, $7E, $00

; TILE $01
;
; XXXXXXXX
; XooooooX
; XooooooX
; Xoo##ooX
; Xoo##ooX
; XooooooX
; XooooooX
; XXXXXXXX
.byt $FF, $81, $81, $81, $81, $81, $81, $FF
.byt $00, $7E, $7E, $66, $66, $7E, $7E, $00

; TILE $02
;
; XXXXXXXX
; XooooooX
; Xooo##oX
; Xooo##oX
; Xo##oooX
; Xo##oooX
; XooooooX
; XXXXXXXX
.byt $FF, $81, $81, $81, $81, $81, $81, $FF
.byt $00, $7E, $72, $72, $4E, $4E, $7E, $00

; TILE $03
;
; XXXXXXXX
; Xoooo##X
; Xoooo##X
; Xoo##ooX
; Xoo##ooX
; X##ooooX
; X##ooooX
; XXXXXXXX
.byt $FF, $81, $81, $81, $81, $81, $81, $FF
.byt $00, $78, $78, $66, $66, $1E, $1E, $00

#if $1000-* < 0
#echo *** Error: VRAM bank1 data occupies too much space 
#else
.dsb $1000-*, 0
#endif

; TILE $00 - Full backdrop color
;
; 00000000
; 00000000
; 00000000
; 00000000
; 00000000
; 00000000
; 00000000
; 00000000
.byt $00, $00, $00, $00, $00, $00, $00, $00
.byt $00, $00, $00, $00, $00, $00, $00, $00

; TILE $01 - Solid 1
;
; 11111111
; 11111111
; 11111111
; 11111111
; 11111111
; 11111111
; 11111111
; 11111111
.byt $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff
.byt $00, $00, $00, $00, $00, $00, $00, $00

; TILE $02 - Stage top
;
; 22222222
; 12121212
; 11111111
; 11111111
; 11111111
; 11111111
; 11111111
; 11111111
.byt $00, $aa, $ff, $ff, $ff, $ff, $ff, $ff
.byt $ff, $55, $00, $00, $00, $00, $00, $00

; TILE $03 to $12 - Tree from http://opengameart.org/content/bomb-party
; Author - Matt Hackett of Lost Decade Games
;
; Full picture layout:
; $03 $04 $05 $06
; $07 $08 $09 $0a
; $0b $0c $0d $0e
; $0f $10 $11 $12

.byt %00000000, %00000000, %00000000, %00000000, %00000000, %00000001, %00000111, %00001111 
.byt %00000000, %00000000, %00000000, %00000000, %00000000, %00000001, %00000110, %00001000 

.byt %00000000, %00000000, %00000000, %00001111, %01111111, %11111111, %11111111, %11111111
.byt %00000000, %00000000, %00000000, %00001111, %01110000, %10001110, %00110001, %11001111

.byt %00000000, %00000000, %00000000, %00011111, %11111111, %11111111, %11111111, %11111111
.byt %00000000, %00000000, %00000000, %00011111, %11100000, %10000000, %11111100, %00000011

.byt %00000000, %00000000, %00000000, %10000000, %11000000, %11100000, %11110000, %11111000
.byt %00000000, %00000000, %00000000, %10000000, %01000000, %00100000, %10110000, %01001000


.byt %00011111, %00011111, %00011111, %00011111, %00111111, %01111111, %01111111, %00111111
.byt %00010001, %00010010, %00010010, %00010001, %00110000, %01001111, %01000000, %00100000

.byt %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
.byt %00000010, %00000100, %00001101, %01010010, %10100010, %01000010, %10000101, %10000111

.byt %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
.byt %00000000, %11111101, %00000010, %11000001, %00110000, %00001000, %00000111, %00000100

.byt %11111000, %11111100, %11111100, %11111110, %11111110, %11111110, %11111100, %11111110
.byt %10101000, %00010100, %00001100, %00001010, %10010010, %10100010, %10100100, %01101010


.byt %00011111, %00011111, %00111111, %00111111, %01111111, %01111111, %01111111, %01111111
.byt %00011111, %00010100, %00101000, %00101000, %01000100, %01000011, %01000000, %01000000

.byt %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
.byt %11101000, %00010000, %00010001, %01110001, %01010010, %10001100, %00000010, %10000011

.byt %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
.byt %11111000, %10000100, %01000010, %01000100, %00110100, %01001011, %01000000, %10100000

.byt %11111100, %11111110, %11111110, %11111110, %11111100, %11111100, %11111100, %11111100
.byt %00010100, %00001010, %00001010, %00001010, %00110100, %01010100, %10010100, %10100100


.byt %00111111, %00001100, %00000000, %00000000, %00000000, %00000000, %00000001, %00000011
.byt %00110011, %00001100, %00000000, %00000000, %00000000, %00000000, %00000001, %00000011

.byt %11111111, %11111111, %01111011, %00100000, %01000000, %10000000, %00000000, %10000000
.byt %10000010, %10000100, %01111111, %00111111, %01111111, %11111111, %11111111, %11111111

.byt %11011111, %11000011, %10000010, %00000001, %00000001, %00000000, %00000000, %00000011
.byt %01111110, %01111111, %11111110, %11111111, %11111111, %11111111, %11111111, %11111111

.byt %11111000, %10000000, %00000000, %00000000, %00000000, %11000000, %00100000, %11110000
.byt %01111000, %10000000, %00000000, %00000000, %00000000, %11000000, %11100000, %11110000

#if $2000-* < 0
#echo *** Error: VRAM bank2 data occupies too much space 
#else
.dsb $2000-*, 0
#endif
