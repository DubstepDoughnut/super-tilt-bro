* = $8000

; Reserved for characters tiles (no need for static initialization, game logic handles it)
.dsb CHARACTERS_END_TILES_OFFSET, 0

; Tiles moved elsewhere
;TODO move all other tiles in more appropriate locations
.dsb 34*16, 0

; 5 tiles - Cloud
; Pattern
;   1 2
;   3 4 5
TILE_CLOUD_1 = (*-$8000)/16
.byt %00000000, %00000000, %00000000, %00000000, %00000000, %00000001, %00000011, %00000111
.byt %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000001, %00000011
TILE_CLOUD_2 = (*-$8000)/16
.byt %00000000, %00000000, %00000000, %00000000, %00000000, %11100000, %11110000, %11111000
.byt %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %11100000, %11110000
TILE_CLOUD_3 = (*-$8000)/16
.byt %00001111, %01111111, %11111111, %01111011, %11111111, %11111111, %01111000, %00110000
.byt %00000111, %00000111, %01110111, %11111111, %11111111, %11111111, %11111111, %01111000
TILE_CLOUD_4 = (*-$8000)/16
.byt %11111100, %11111101, %11111111, %11111111, %11111111, %11111111, %11100111, %01100000
.byt %11111000, %11111000, %11111101, %11111111, %11111111, %11111111, %11111111, %11100000
TILE_CLOUD_5 = (*-$8000)/16
.byt %01110000, %11111000, %11111000, %11111100, %11111100, %11111110, %11110110, %00000000
.byt %00000000, %01110000, %11110000, %11111000, %11111000, %11111100, %11111111, %11110100

; Unused
.byt %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
.byt %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000

; TILES $8e to $91 - Music icon
TILE_ICON_MUSIC_1 = (*-$8000)/16
.byt %00000000, %00000000, %00011111, %00001100, %00001100, %00001111, %00011000, %00011000
.byt %11111111, %11111111, %11100000, %11110011, %11110011, %11110000, %11100111, %11100111
TILE_ICON_MUSIC_2 = (*-$8000)/16
.byt %00000000, %00000000, %11111000, %00011000, %11110000, %00110000, %00110000, %00110000
.byt %11111111, %11111111, %00000111, %11100111, %00001111, %11001111, %11001111, %11001111
TILE_ICON_MUSIC_3 = (*-$8000)/16
.byt %00011000, %00011000, %00011000, %00111100, %01111100, %01111100, %00111000, %00000000
.byt %11100111, %11100111, %11100111, %11000011, %10000011, %10000011, %11000111, %11111111
TILE_ICON_MUSIC_4 = (*-$8000)/16
.byt %00110000, %01111000, %11111000, %11110000, %01100000, %00000000, %00000000, %00000000
.byt %11001111, %10000111, %00000111, %00001111, %10011111, %11111111, %11111111, %11111111

; TILES $92 to $95 - Stocks icon
TILE_ICON_STOCKS_1 = (*-$8000)/16
.byt %00000000, %00000000, %00000000, %00011100, %00111110, %01110011, %01100001, %01100011
.byt %11111111, %11111111, %11111111, %11100011, %11000001, %10001100, %10011110, %10011100
TILE_ICON_STOCKS_2 = (*-$8000)/16
.byt %00000000, %00000000, %00000000, %01110000, %11111000, %11011100, %10001100, %00001100
.byt %11111111, %11111111, %11111111, %10001111, %00000111, %00100011, %01110011, %11110011
TILE_ICON_STOCKS_3 = (*-$8000)/16
.byt %01100000, %00110000, %00011000, %00001100, %00000110, %00000011, %00000001, %00000000
.byt %10011111, %11001111, %11100111, %11110011, %11111001, %11111100, %11111110, %11111111
TILE_ICON_STOCKS_4 = (*-$8000)/16
.byt %00001100, %00011000, %00110000, %01100000, %11000000, %10000000, %00000000, %00000000
.byt %11110011, %11100111, %11001111, %10011111, %00111111, %01111111, %11111111, %11111111

; TILES $96 to $99 - Player icon
TILE_ICON_PLAYER_1 = (*-$8000)/16
.byt %00000000, %00110000, %00110000, %00011000, %00011111, %00110000, %00111100, %01000110
.byt %11111111, %11001111, %11001111, %11100111, %11100000, %11001111, %11000011, %10111001
TILE_ICON_PLAYER_2 = (*-$8000)/16
.byt %00000000, %00001100, %00001100, %00011000, %11111000, %00001100, %00111100, %01100010
.byt %11111111, %11110011, %11110011, %11100111, %00000111, %11110011, %11000011, %10011101
TILE_ICON_PLAYER_3 = (*-$8000)/16
.byt %01010110, %01010110, %01000100, %00111000, %00010011, %00001100, %00000111, %00000000
.byt %10101001, %10101001, %10111011, %11000111, %11101100, %11110011, %11111000, %11111111
TILE_ICON_PLAYER_4 = (*-$8000)/16
.byt %01101010, %01101010, %00100010, %00011100, %11001000, %00110000, %11100000, %00000000
.byt %10010101, %10010101, %11011101, %11100011, %00110111, %11001111, %00011111, %11111111

; TILE $9a - Text dot "."
;
; 02200000
; 21120000
; 21120000
; 02200000
; 00000000
; 00000000
; 00000000
; 00000000
TILE_TEXT_DOT = (*-$8000)/16
.byt %00000000, %01100000, %01100000, %00000000, %00000000, %00000000, %00000000, %00000000
.byt %01100000, %10010000, %10010000, %01100000, %00000000, %00000000, %00000000, %00000000

; Unused
.dsb 9*16, 0

; TILE ntsc indicator
;
; 01111110
; 11211211
; 11221211
; 11221211
; 11212211
; 11212211
; 11211211
; 01111110
TILE_NTSC_INDICATOR = (*-$8000)/16
.byt %11101110, %10100100, %10100100, %00000000, %01100110, %01001000, %01001000, %11000110
.byt %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000

#echo CHR-DATA number of free sprites
#print 256-(*-$8000)/16
#if $9000-* < 0
#error VRAM pattern1 data occupies too much space
#else
.dsb $9000-*, 0
#endif

; No CHR-TILES in this bank (should always be handled by gamestates logic)

#if $a000-* < 0
#error VRAM pattern2 data occupies too much space
#else
.dsb $a000-*, 0
#endif

#if $c000-* < 0
#error CHR-BANK occupies too much space
#else
.dsb $c000-*, 0
#endif
